name: CI

on:
  push:
    branches: [ main, master, kroupaadam ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports: ['27017:27017']
        options: >-
          --health-cmd "mongosh --quiet --eval 'db.runCommand({ ping: 1 })'" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 5
    env:
      MONGO_URI_TEST: mongodb://localhost:27017/cykloservis_test
      JWT_SECRET: testsecret
      LOG_LEVEL: warn
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json
      - name: Install backend deps
        working-directory: backend
        run: npm ci
      - name: Run backend tests (with coverage)
        working-directory: backend
        run: npm run test:coverage -- --ci --runInBand
      - name: Upload backend coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage
      - name: Lint backend
        working-directory: backend
        run: npm run lint

  frontend-build:
    runs-on: ubuntu-latest
    needs: backend-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci || npm install
      - name: Build frontend
        working-directory: frontend
        env:
          CI: true
        run: npm run build
      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build
